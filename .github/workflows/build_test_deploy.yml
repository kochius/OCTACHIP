name: Build, test, and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  BUILD_TYPE: Release

permissions:
  id-token: write
  contents: read

jobs:
  build_and_test_native:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

  build_emscripten:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Emscripten toolchain
        uses: mymindstorm/setup-emsdk@v12

      - name: Configure CMake
        run: emcmake cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build WASM
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier
        run: npm run check-format

      - name: Build web files
        run: npm run build

      - name: Copy roms.json to dist
        run: rsync -av ${{github.workspace}}/web/roms.json ${{github.workspace}}/build/dist/

      - name: Upload distribution files
        uses: actions/upload-artifact@v3
        with:
          name: production
          path: ${{github.workspace}}/build/dist/

  deploy:
    needs:
      - build_and_test_native
      - build_emscripten

    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}

    runs-on: ubuntu-latest

    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v3
        with:
          name: production
          path: ${{github.workspace}}/dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{secrets.S3_DEPLOYMENT_ROLE}}
          role-session-name: GitHubActionsToAWSS3ViaFederatedOIDC
          aws-region: ${{env.AWS_REGION}}

      - name: Deploy website to S3 bucket
        run: aws s3 sync ${{github.workspace}}/dist s3://www.octachip.com --delete
